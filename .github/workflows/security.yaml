# .github/workflows/security-pipeline.yaml (Dosya adını değiştirebilirsin)

name: Security Pipeline (Build, SBOM, SAST)

on:
  push:
    branches: [ main ] # Veya kendi ana branch'inizin adı
  workflow_dispatch:

jobs:
  # ----- JOB 1: Build Docker Image and Generate SBOM -----
  build-and-sbom:
    name: Build and SBOM Generation
    runs-on: ubuntu-latest
    steps:
      # 1.1: Kodu al
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1.2: Docker Buildx'i kur
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 1.3: Docker imajını build et
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: juice-shop-local:latest

      # 1.4: Syft SBOM aracını kur
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          syft version

      # 1.5: SBOM oluştur (SPDX ve CycloneDX formatlarında)
      - name: Generate SBOM from Docker image
        run: |
          syft packages docker:juice-shop-local:latest -o spdx-json=sbom-spdx.json
          syft packages docker:juice-shop-local:latest -o cyclonedx-json=sbom-cyclonedx.json

      # 1.6: Oluşturulan SBOM dosyalarını artifact olarak kaydet
      - name: Upload SBOM artifact (SPDX)
        uses: actions/upload-artifact@v4
        with:
          name: sbom-spdx
          path: sbom-spdx.json

      - name: Upload SBOM artifact (CycloneDX)
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom-cyclonedx.json

  # ----- JOB 2: SAST Scan using Semgrep (runs after Job 1) -----
  sast-scan:
    name: SAST Scan (Semgrep)
    # Bu işin başlaması için 'build-and-sbom' işinin başarıyla bitmesi gerekir
    needs: build-and-sbom
    runs-on: ubuntu-latest
    # Adımlar Semgrep konteyneri içinde çalışacak
    container: returntocorp/semgrep

    steps:
      # 2.1: Kodu al (Konteyner içinde /github/workspace altına alınır)
      # NOT: Her iş ayrı bir ortamda başlayabilir, bu yüzden checkout genellikle tekrar gerekir.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2.2: Semgrep taramasını çalıştır ve sonucu kaydet
      - name: Run Semgrep Scan
        run: |
          mkdir -p semgrep/results
          semgrep ci --config=auto --sarif --output=semgrep/results/semgrep.sarif

      # 2.3: Semgrep SARIF dosyasını GitHub Security Tab'a yükle
      - name: Upload SARIF file to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep/results/semgrep.sarif

      # 2.4: Semgrep SARIF dosyasını indirilebilir artifact olarak yükle
      - name: Upload Semgrep report as Artifact
        uses: actions/upload-artifact@v4
        # 'if: always()' tarama başarısız olsa bile yüklemeyi dener.
        if: always()
        with:
          name: semgrep-sast-report # Artifact adı
          path: semgrep/results/semgrep.sarif # Yüklenecek dosyanın yolu
